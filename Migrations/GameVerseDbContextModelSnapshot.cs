// <auto-generated />
using System;
using GameVerse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameVerse.Migrations
{
    [DbContext(typeof(GameVerseDbContext))]
    partial class GameVerseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameVerse.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("id_category");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.HasKey("IdCategory")
                        .HasName("PK__Categori__E548B673EF47F7E4");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GameVerse.Models.Game", b =>
                {
                    b.Property<int>("IdGame")
                        .HasColumnType("int")
                        .HasColumnName("id_game");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<int?>("PriceBuy")
                        .HasColumnType("int")
                        .HasColumnName("price_buy");

                    b.Property<int?>("PriceRental")
                        .HasColumnType("int")
                        .HasColumnName("price_rental");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("url");

                    b.HasKey("IdGame")
                        .HasName("PK__Games__0E819B2CC35EB4EF");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameVerse.Models.PurchaseDetail", b =>
                {
                    b.Property<int>("IdBuy")
                        .HasColumnType("int")
                        .HasColumnName("id_buy");

                    b.Property<int>("IdGame")
                        .HasColumnType("int")
                        .HasColumnName("id_game");

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.HasKey("IdBuy", "IdGame")
                        .HasName("PK_Purchase");

                    b.HasIndex("IdGame");

                    b.ToTable("Purchase_Detail", (string)null);
                });

            modelBuilder.Entity("GameVerse.Models.Rental", b =>
                {
                    b.Property<int>("IdRent")
                        .HasColumnType("int")
                        .HasColumnName("id_rent");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int?>("RentDays")
                        .HasColumnType("int")
                        .HasColumnName("rent_days");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("status");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.HasKey("IdRent")
                        .HasName("PK__Rentals__0F4BF3B061394CDA");

                    b.HasIndex("IdUser");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("GameVerse.Models.RentalDetail", b =>
                {
                    b.Property<int>("IdRental")
                        .HasColumnType("int")
                        .HasColumnName("id_rental");

                    b.Property<int>("IdGame")
                        .HasColumnType("int")
                        .HasColumnName("id_game");

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("expire_date");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<DateTime?>("RentalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("rental_date");

                    b.HasKey("IdRental", "IdGame")
                        .HasName("PK_RentalDetail");

                    b.HasIndex("IdGame");

                    b.ToTable("Rental_Detail", (string)null);
                });

            modelBuilder.Entity("GameVerse.Models.Shopping", b =>
                {
                    b.Property<int>("IdBuy")
                        .HasColumnType("int")
                        .HasColumnName("id_buy");

                    b.Property<DateTime?>("BuyDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("buy_date");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int?>("Total")
                        .HasColumnType("int")
                        .HasColumnName("total");

                    b.HasKey("IdBuy")
                        .HasName("PK__Shopping__D507E43F2007AD30");

                    b.HasIndex("IdUser");

                    b.ToTable("Shopping", (string)null);
                });

            modelBuilder.Entity("GameVerse.Models.ShoppingCart", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int>("IdGame")
                        .HasColumnType("int")
                        .HasColumnName("id_game");

                    b.Property<DateTime?>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.HasKey("IdUser", "IdGame")
                        .HasName("PK_ShoppingCart");

                    b.HasIndex("IdGame");

                    b.ToTable("Shopping_Cart", (string)null);
                });

            modelBuilder.Entity("GameVerse.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("rol");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("username");

                    b.HasKey("IdUser")
                        .HasName("PK__Users__D2D14637154F8C6B");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameVerse.Models.Wishlist", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("id_user");

                    b.Property<int>("IdGame")
                        .HasColumnType("int")
                        .HasColumnName("id_game");

                    b.Property<DateTime?>("AddedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("added_at");

                    b.HasKey("IdUser", "IdGame");

                    b.HasIndex("IdGame");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("GamesCategory", b =>
                {
                    b.Property<int>("IdGame")
                        .HasColumnType("int")
                        .HasColumnName("id_game");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int")
                        .HasColumnName("id_category");

                    b.HasKey("IdGame", "IdCategory")
                        .HasName("PK_GamesCategory");

                    b.HasIndex("IdCategory");

                    b.ToTable("Games_Category", (string)null);
                });

            modelBuilder.Entity("GameVerse.Models.PurchaseDetail", b =>
                {
                    b.HasOne("GameVerse.Models.Shopping", "IdBuyNavigation")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("IdBuy")
                        .IsRequired()
                        .HasConstraintName("FK_PD_Buy");

                    b.HasOne("GameVerse.Models.Game", "IdGameNavigation")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("IdGame")
                        .IsRequired()
                        .HasConstraintName("FK_PD_Game");

                    b.Navigation("IdBuyNavigation");

                    b.Navigation("IdGameNavigation");
                });

            modelBuilder.Entity("GameVerse.Models.Rental", b =>
                {
                    b.HasOne("GameVerse.Models.User", "IdUserNavigation")
                        .WithMany("Rentals")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_Rentals_User");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("GameVerse.Models.RentalDetail", b =>
                {
                    b.HasOne("GameVerse.Models.Game", "IdGameNavigation")
                        .WithMany("RentalDetails")
                        .HasForeignKey("IdGame")
                        .IsRequired()
                        .HasConstraintName("FK_RD_Game");

                    b.HasOne("GameVerse.Models.Rental", "IdRentalNavigation")
                        .WithMany("RentalDetails")
                        .HasForeignKey("IdRental")
                        .IsRequired()
                        .HasConstraintName("FK_RD_Rental");

                    b.Navigation("IdGameNavigation");

                    b.Navigation("IdRentalNavigation");
                });

            modelBuilder.Entity("GameVerse.Models.Shopping", b =>
                {
                    b.HasOne("GameVerse.Models.User", "IdUserNavigation")
                        .WithMany("Shoppings")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK_Shopping_User");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("GameVerse.Models.ShoppingCart", b =>
                {
                    b.HasOne("GameVerse.Models.Game", "IdGameNavigation")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("IdGame")
                        .IsRequired()
                        .HasConstraintName("FK_SC_Game");

                    b.HasOne("GameVerse.Models.User", "IdUserNavigation")
                        .WithMany("ShoppingCarts")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_SC_User");

                    b.Navigation("IdGameNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("GameVerse.Models.Wishlist", b =>
                {
                    b.HasOne("GameVerse.Models.Game", "IdGameNavigation")
                        .WithMany("Wishlists")
                        .HasForeignKey("IdGame")
                        .IsRequired()
                        .HasConstraintName("FK_WL_Game");

                    b.HasOne("GameVerse.Models.User", "IdUserNavigation")
                        .WithMany("Wishlists")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK_WL_User");

                    b.Navigation("IdGameNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("GamesCategory", b =>
                {
                    b.HasOne("GameVerse.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .IsRequired()
                        .HasConstraintName("FK_GC_Category");

                    b.HasOne("GameVerse.Models.Game", null)
                        .WithMany()
                        .HasForeignKey("IdGame")
                        .IsRequired()
                        .HasConstraintName("FK_GC_Game");
                });

            modelBuilder.Entity("GameVerse.Models.Game", b =>
                {
                    b.Navigation("PurchaseDetails");

                    b.Navigation("RentalDetails");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("GameVerse.Models.Rental", b =>
                {
                    b.Navigation("RentalDetails");
                });

            modelBuilder.Entity("GameVerse.Models.Shopping", b =>
                {
                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("GameVerse.Models.User", b =>
                {
                    b.Navigation("Rentals");

                    b.Navigation("ShoppingCarts");

                    b.Navigation("Shoppings");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
